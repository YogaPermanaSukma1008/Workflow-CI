name: MLflow CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  train-and-deploy:
    runs-on: ubuntu-latest

    env:
      DAGSHUB_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
      DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}

    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v3

      - name: 🐍 Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: 📦 Install dependencies
        run: |
          pip install --upgrade pip
          pip install pandas numpy scikit-learn mlflow matplotlib seaborn joblib

      - name: ⚙️ Prepare loandata & directory
        working-directory: ./MLProject
        run: |
          mkdir -p loandata_preprocessing models

          echo "feature1,feature2,feature3" > loandata_preprocessing/X_train_processed.csv
          echo "1.0,2.0,3.0" >> loandata_preprocessing/X_train_processed.csv
          echo "4.0,5.0,6.0" >> loandata_preprocessing/X_train_processed.csv

          echo "feature1,feature2,feature3" > loandata_preprocessing/X_test_processed.csv
          echo "1.5,2.5,3.5" >> loandata_preprocessing/X_test_processed.csv
          echo "4.5,5.5,6.5" >> loandata_preprocessing/X_test_processed.csv

          echo "target" > loandata_preprocessing/y_train.csv
          echo "0" >> loandata_preprocessing/y_train.csv
          echo "1" >> loandata_preprocessing/y_train.csv

          echo "target" > loandata_preprocessing/y_test.csv
          echo "0" >> loandata_preprocessing/y_test.csv
          echo "1" >> loandata_preprocessing/y_test.csv

      - name: 🚀 Run MLflow training
        working-directory: ./MLProject
        env:
          DAGSHUB_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          python modelling.py

      - name: 🧾 Get latest MLflow run_id
        working-directory: ./MLProject
        run: |
          echo "RUN_ID=$(mlflow runs list -v | grep -v 'Run ID' | head -1 | awk '{print $4}')" >> $GITHUB_ENV

      - name: 📤 Upload trained model to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: trained-model
          path: MLProject/models/model.pkl

      - name: 🐳 Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./MLProject
          push: false
          tags: mlflow-model:latest

      - name: 🔐 Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🏷️ Tag & Push Docker Image
        if: github.event_name != 'pull_request'
        run: |
          docker tag mlflow-model:latest ${{ secrets.DOCKER_USERNAME }}/mlflow-model:latest
          docker tag mlflow-model:latest ${{ secrets.DOCKER_USERNAME }}/mlflow-model:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/mlflow-model:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/mlflow-model:${{ github.sha }}

      - name: ✅ Done
        run: echo "🎉 Workflow completed successfully."